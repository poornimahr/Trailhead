# Unique name for this workflow
name: Validate Against Developer Sandbox Org

# Definition when the workflow should run
on:
    pull_request:
      branches:
      - DEV
    # paths:
    #   - 'sfdxsrc/*'
      paths-ignore:
        - 'sfdx-project.json'
        - 'README.md'
        - 'SECURITY.md'
        - 'package.json'
        - 'sfdx-project.json'
    workflow_dispatch:

# Jobs to be executed

jobs:

  environment-setup:
  
    name: environment-setup
    runs-on: ubuntu-latest
    
    steps:
    
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      # Cache node_modules to speed up the process
      - name: Setup Node Environment
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
          
     # - name: Install Salesforce CLI
     #   run: |
      #      npm install sfdx-cli
      #      node_modules/sfdx-cli/bin/run --version
      #      node_modules/sfdx-cli/bin/run plugins --core
            
  validate:
    name: Validate
    needs: [environment-setup]
    runs-on: ubuntu-latest
    # if: github.event == 'push'
    steps:

      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
            mkdir sfdx-cli
            tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
            ./sfdx-cli/install

      # Run Salesforce CLI Scanner For Security checks
      - name: 'Check for SFDX Update'
        run: sfdx update

      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        
      - name: 'Install app and create delta'
        run: |
          echo 'y' | sfdx plugins:install sfdx-git-delta
          npm install -g npm@9.1.3
          git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          git fetch --all
          git checkout -b pr
          git --no-pager diff --name-status pr origin/DEV   
          sgd --to pr --from origin/DEV --repo . --output .
          cat package/package.xml
      # sudo npm install sfdx-git-delta@latest-g
      # Install Salesforce CLI Scanner
     # - name: 'Install Salesforce CLI Scanner'
      #  run: sfdx plugins:install @salesforce/sfdx-scanner
        

        
      # Connect with Salesforce ORG
      - name: 'Connect with Salesforce ORG'
        working-directory: .github/jwt/
        run: sfdx auth:jwt:grant --clientid ${{ secrets.CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.USERNAME }} -d --instanceurl ${{ secrets.SFDC_HOST_LOGIN }} --setalias 'poornima-dev-org'
  
     # Run Salesforce CLI Scanner For Security checks
      - name: 'List All ORGS'
        run: sfdx force:org:list
        
      - name: 'Convert Metadata'
        run: sfdx force:source:convert --manifest=package/package.xml --outputdir=convert
      - name: 'Run Test on Metadata'
        run: sfdx force:mdapi:deploy --deploydir=convert -w30
        
      # Deploy source to org
     # - name: 'Perform the validation against Developer Sandbox'
      #  run: sfdx force:source:deploy --checkonly --sourcepath 'force-app/main/default/classes' --testlevel 'NoTestRun' --targetusername 'poornima-dev-org'

      # Deploy source to org
     # - name: 'Perform the Deployment'
      #  run: sfdx force:source:deploy --sourcepath 'force-app/main/default/classes' --testlevel 'NoTestRun' --targetusername 'poornima-dev-org'

      # Run Apex tests in scratch org
     # - name: 'Run Apex tests'
      #  run: sfdx force:apex:test:run -c -r human --testlevel 'RunLocalTests' -d ./tests/apex -w 20 --targetusername 'poornima-dev-org' --codecoverage
